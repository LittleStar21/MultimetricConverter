html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 0;
  font-family: "Lato", sans-serif;
}

.top-part {
  background-color: #6b8fb9;
  min-height: 80px;
}

.app {
  display: flex;
  flex-flow: row nowrap;
  height: 100vh;
}

.app-navigation {
  flex-grow: 0.4;
  font-size: 22px;
}

.app-options {
  color: #1a1a1a;
  opacity: 0.5;
  /* padding-bottom: 10px; */
}

.app-option {
  padding: 18px 0px;
}

.app-option:hover {
  color: #ffffff;
  background-color: #507098;
  /* border-radius: 10px; */
  transition: 0.4s all ease;
}

.app-option:active {
  transition: 0s;
  font-weight: 400;
}

img {
  width: 40px;
  padding-left: 20px;
}

.app-option-text {
  padding-left: 10px;
  font-weight: 600;
  padding-bottom: 10px;
}

.app-option:hover {
  cursor: pointer;
}

.navigation-sep {
  content: "";
  width: 84%;
  margin-left: 8%;
  border-bottom: 1px solid #c4c4c4;
}

.help-support {
  display: flex;
  flex-direction: column;
}

.help-text {
  padding: 20px 25px;
  font-weight: 400;
  color: #1a1a1a;
  opacity: 0.5;
}

.help-text:hover,
.help-text:active {
  cursor: pointer;
  background-color: #dfefff;
  transition: 0.4s all ease;
}

.main-app {
  flex-grow: 3;
  border-left: 1px solid #c4c4c4;
  border-right: 1px solid #c4c4c4;
  /* display: flex;
  flex-direction: column;
  justify-content: space-evenly; */
  padding-top: 10px;
  padding-left: 10px;
}

.app-display {
}

.app-buttons {
}

.programmer-input {
  background-color: #dfefff;
  border-radius: 10px;
  min-height: 42vh;
  width: 50%;
  display: flex;
  flex-direction: column;
}

.programmer-input-number {
  position: absolute;
  top: 40%;
  font-family: Open Sans;
  font-size: 96px;
  font-weight: 600;
  padding-right: 20px;
  align-self: flex-end;
}

.select-box {
  display: flex;
  width: 180px;
  flex-direction: column;
  padding: 5px;
}

.select-box .options-container {
  color: #1a1a1a;
  max-height: 0;
  width: 100%;
  opacity: 0;
  transition: all 0.4s;
  /* border-radius: 8px; */
  overflow: hidden;
  order: 1;
}

.selected {
  font-size: 24px;
  font-weight: 600;
  border-radius: 8px;
  margin-bottom: 8px;
  color: #1a1a1a;
  position: relative;
  order: 0;
}

.selected::after {
  content: "";
  background: url("../icons/arrown_down.svg");
  filter: invert(75%);
  background-size: contain;
  background-repeat: no-repeat;
  position: absolute;
  height: 100%;
  width: 32px;
  right: -30px;
  top: 10px;
  transition: all 0.4s;
}

.select-box .options-container.active {
  max-height: 180px;
  opacity: 1;
  overflow-y: scroll;
}

.select-box .options-container.active + .selected::after {
  transform: rotateX(180deg);
  top: -8px;
}

.select-box .options-container::-webkit-scrollbar {
  width: 8px;
  border-radius: 0 8px 8px 0;
}

.select-box .options-container::-webkit-scrollbar-thumb {
  border-radius: 0 8px 8px 0;
}

.select-box .option,
.selected {
  padding: 12px 24px;
  cursor: pointer;
}

.select-box .option:hover {
  background: #ffffff;
}

.select-box label {
  cursor: pointer;
}

label {
  font-size: 18px;
}

.select-box .option .radio {
  display: none;
}

.app-config {
  flex-grow: 0.5;
  display: flex;
  flex-flow: column nowrap;
  font-size: 22px;
  font-weight: 600;
}

.config-title {
  padding: 20px 30px;
  border-bottom: 1px solid #c4c4c4;
}

.config-body {
  padding: 0px 30px;
}

.config-color {
  padding: 20px 0px;
  border-bottom: 1px solid #c4c4c4;
}

.color-title {
}

.color-type {
}

.dark-mode {
  display: flex;
  flex-direction: row;
  gap: 5%;
  padding: 20px 0px;
}

.dark-mode-text {
  padding-top: 5px;
}

input[type="checkbox"] {
  position: relative;
  width: 60px;
  height: 32px;
  appearance: none;
  background: #c6c6c6;
  outline: none;
  border-radius: 20px;
  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);
}

input:checked[type="checkbox"] {
  background: #90c8c1;
}

input[type="checkbox"]:hover {
  cursor: pointer;
}

input[type="checkbox"]:before {
  content: "";
  position: absolute;
  width: 30px;
  height: 32px;
  border-radius: 20px;
  top: 0;
  left: 0;
  background: #ffffff;
  transform: scale(1.1);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  transition: 0.5s;
}

input:checked[type="checkbox"]:before {
  left: 30px;
}
